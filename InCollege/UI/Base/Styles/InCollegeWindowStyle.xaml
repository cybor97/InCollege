<ResourceDictionary
    xmlns:sw="clr-namespace:WpfStyleableWindow.StyleableWindow"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InCollege.UI.Base.Styles"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

    <sw:WindowMinimizeCommand x:Key="MinimizeCommand"/>
    <sw:WindowMaximizeCommand x:Key="MaximizeCommand"/>
    <sw:WindowCloseCommand x:Key="CloseCommand"/>
    <sw:OpenContextMenuCommand x:Key="OpenContextMenuCommand"/>


    <Style TargetType="{x:Type local:WindowButton}" x:Key="WindowButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <TextBlock Name="CloseButton" Text="{TemplateBinding Content}" FontSize="20" FontFamily="Lucida Calligraphy" Foreground="#232323" HorizontalAlignment="Right">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CloseButton"
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                            From="#232323"
                                                            Duration="0:0:0.3"
                                                            To="{Binding AnimateColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CloseButton"
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                            To="#232323" Duration="0:0:0.3" 
                                                            From="{Binding AnimateColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="BaseWindowTemplate" TargetType="{x:Type Window}">
        <Grid>
            <Border CornerRadius="10" Background="{DynamicResource MaterialDesignPaper}"
                    sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    BorderBrush="#EEE"
                    BorderThickness="2">
                <Grid Name="MainContainer">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Name="Header" Height="30" Margin="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <local:WindowButton HorizontalAlignment="Left"
                                    Grid.Column="0"
                                    Style="{StaticResource WindowButton}" 
                                    Content="☰"
                                    Command="{StaticResource OpenContextMenuCommand}"
                                    AnimateColor="Green"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>

                            <TextBlock Text="{TemplateBinding Title}" 
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" 
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       FontSize="16"/>

                            <local:WindowButton HorizontalAlignment="Right"
                                    Grid.Column="2"
                                    Content="X"
                                    AnimateColor="Red"
                                    Style="{StaticResource WindowButton}" 
                                    Command="{StaticResource CloseCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>

                        </Grid>
                    </Grid>
                    <Grid Name="ContentGrid" Margin="5 0 5 5" Grid.Row="1">
                        <AdornerDecorator>
                            <ContentPresenter x:Name="WindowContent"/>
                        </AdornerDecorator>
                        <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                    </Grid>
                </Grid>
            </Border>
            <!--TODO:Do something with non-resizable windows-->
            <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" 
                   Visibility="Collapsed"
                   sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" 
                   Visibility="Collapsed"    
                   sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" 
                   Visibility="Collapsed"   
                   sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Background" Value="Black"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="Padding" Value="0"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Window}" x:Key="BaseWindow" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="TextElement.FontWeight" Value="Regular"/>
        <Setter Property="TextElement.FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}"/>
        <Setter Property="AllowsTransparency" Value="True"/>

        <Setter Property="Template" Value="{StaticResource BaseWindowTemplate}"/>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>
</ResourceDictionary>
